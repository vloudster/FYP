#!/usr/bin/env bash
 
set -o errexit
set -o pipefail
set -o nounset

working_dir="$(dirname ${0})"
source "${working_dir}/_sourced/constants.sh"
source "${working_dir}/_sourced/messages.sh"

 
if [[ -z ${1+x} ]]; then
   message_error "Backup filename is a required parameter. Try again."
   exit 1
fi
backup_filename="${BACKUP_DIR_PATH}/${1}"
if [[ ! -f "${backup_filename}" ]]; then
   message_error "No backup with the specified filename found."
   exit 1
fi
 
message_welcome "Restoring the '${POSTGRES_DB}' database from '${backup_filename}' backup..."
 
if [[ "${POSTGRES_USER}" == "postgres" ]]; then
   message_error "Restoring as 'postgres' user is not supported. try another user."
   exit 1
fi
 
export PGHOST="${POSTGRES_HOST}"
export PGPORT="${POSTGRES_PORT}"
export PGUSER="${POSTGRES_USER}"
export PGPASSWORD="${POSTGRES_PASSWORD}"
export PGDATABASE="${POSTGRES_DB}"
 
message_info "Dropping database..."
dropdb "${PGDATABASE}"
 
message_info "Creating a new database..."
createdb --owner="${POSTGRES_USER}"
 
message_info "Applying backup to new database..."
gunzip -c "${backup_filename}" | psql "${POSTGRES_DB}"
 
message_success "The '${POSTGRES_DB}' database has been restored from the '${backup_filename}' backup."